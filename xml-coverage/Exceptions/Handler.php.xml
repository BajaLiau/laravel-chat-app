<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Handler.php" path="\Exceptions">
    <totals>
      <lines total="31" comments="9" code="22" executable="2" executed="2" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Exceptions\Handler" start="8" executable="2" executed="2" crap="1">
      <namespace name="App\Exceptions"/>
      <method name="register" signature="register(): void" start="24" end="29" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="26">
        <covered by="Tests\Unit\ChatModelTest::it_defines_expected_fillable_and_casts"/>
        <covered by="Tests\Unit\ChatModelTest::relationships_sender_receiver_user_and_reply_work"/>
        <covered by="Tests\Unit\ChatModelTest::factory_states_seen_and_deleted_work"/>
        <covered by="Tests\Unit\ChatRequestTest::message_is_required"/>
        <covered by="Tests\Unit\ChatRequestTest::message_must_be_string"/>
        <covered by="Tests\Unit\ChatRequestTest::valid_message_passes_validation"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_is_optional"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_must_be_integer"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_must_exist_in_chats_table"/>
        <covered by="Tests\Unit\ChatRequestTest::valid_reply_id_passes_validation"/>
        <covered by="Tests\Unit\ChatRequestTest::authorize_returns_true"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_online_for_recent_activity"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_online_for_current_time"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_today_format_for_today"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_yesterday_format_for_yesterday"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_full_date_format_for_older_dates"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_null_for_null_timestamp"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_five_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_six_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_four_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_handles_specific_date_formats"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_has_message_property"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_broadcasts_on_private_channel"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_implements_should_broadcast_now"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_dispatchable_trait"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_interacts_with_sockets_trait"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_serializes_models_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_has_message_property"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_broadcasts_on_private_channel"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_implements_should_broadcast_now"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_dispatchable_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_interacts_with_sockets_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_serializes_models_trait"/>
        <covered by="Tests\Unit\UserModelTest::relationships_receive_send_and_messages_work_and_are_ordered_desc"/>
        <covered by="Tests\Unit\UserModelTest::fillable_hidden_casts_hashing_and_searchable_are_correct"/>
        <covered by="Tests\Feature\Auth\AuthenticatedSessionControllerTest::test_destroy_logs_user_out_and_updates_status_and_last_seen"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_unverified_user_receives_verification_notification"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_verified_user_is_redirected_to_home_without_sending"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_create_displays_reset_view_with_email_and_token"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_store_resets_password_and_redirects_on_success"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_store_returns_validation_error_when_reset_fails"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Auth\PasswordUpdateTest::test_password_can_be_updated"/>
        <covered by="Tests\Feature\Auth\PasswordUpdateTest::test_correct_password_must_be_provided_to_update_password"/>
        <covered by="Tests\Feature\Auth\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\RegistrationTest::test_new_users_can_register"/>
        <covered by="Tests\Feature\ChatControllerTest::test_guests_are_redirected_from_chat_routes"/>
        <covered by="Tests\Feature\ChatControllerTest::test_index_shows_users_list_in_inertia"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_redirects_when_chat_with_self"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_marks_unseen_messages_as_seen_and_dispatches_read_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_store_creates_message_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_update_only_sender_can_update_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_update_forbidden_for_non_sender"/>
        <covered by="Tests\Feature\ChatControllerTest::test_destroy_soft_deletes_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_destroy_forbidden_for_non_sender"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_inertia_contains_grouped_messages_structure"/>
        <covered by="Tests\Feature\ProfileTest::test_profile_page_is_displayed"/>
        <covered by="Tests\Feature\ProfileTest::test_profile_information_can_be_updated"/>
        <covered by="Tests\Feature\ProfileTest::test_email_verification_status_is_unchanged_when_the_email_address_is_unchanged"/>
        <covered by="Tests\Feature\ProfileTest::test_user_can_delete_their_account"/>
        <covered by="Tests\Feature\ProfileTest::test_correct_password_must_be_provided_to_delete_account"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_returns_matches_by_name_and_username"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_returns_empty_when_no_matches"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_works_with_no_query_parameter"/>
      </line>
      <line nr="28">
        <covered by="Tests\Unit\ChatModelTest::it_defines_expected_fillable_and_casts"/>
        <covered by="Tests\Unit\ChatModelTest::relationships_sender_receiver_user_and_reply_work"/>
        <covered by="Tests\Unit\ChatModelTest::factory_states_seen_and_deleted_work"/>
        <covered by="Tests\Unit\ChatRequestTest::message_is_required"/>
        <covered by="Tests\Unit\ChatRequestTest::message_must_be_string"/>
        <covered by="Tests\Unit\ChatRequestTest::valid_message_passes_validation"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_is_optional"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_must_be_integer"/>
        <covered by="Tests\Unit\ChatRequestTest::reply_id_must_exist_in_chats_table"/>
        <covered by="Tests\Unit\ChatRequestTest::valid_reply_id_passes_validation"/>
        <covered by="Tests\Unit\ChatRequestTest::authorize_returns_true"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_online_for_recent_activity"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_online_for_current_time"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_today_format_for_today"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_yesterday_format_for_yesterday"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_full_date_format_for_older_dates"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_returns_null_for_null_timestamp"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_five_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_six_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_boundary_test_at_four_seconds"/>
        <covered by="Tests\Unit\HelperTest::user_last_activity_status_handles_specific_date_formats"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_has_message_property"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_broadcasts_on_private_channel"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_implements_should_broadcast_now"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_dispatchable_trait"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_interacts_with_sockets_trait"/>
        <covered by="Tests\Unit\NewMessageEventTest::new_message_event_uses_serializes_models_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_has_message_property"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_broadcasts_on_private_channel"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_implements_should_broadcast_now"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_dispatchable_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_interacts_with_sockets_trait"/>
        <covered by="Tests\Unit\ReadMessageEventTest::read_message_event_uses_serializes_models_trait"/>
        <covered by="Tests\Unit\UserModelTest::relationships_receive_send_and_messages_work_and_are_ordered_desc"/>
        <covered by="Tests\Unit\UserModelTest::fillable_hidden_casts_hashing_and_searchable_are_correct"/>
        <covered by="Tests\Feature\Auth\AuthenticatedSessionControllerTest::test_destroy_logs_user_out_and_updates_status_and_last_seen"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_unverified_user_receives_verification_notification"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_verified_user_is_redirected_to_home_without_sending"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_create_displays_reset_view_with_email_and_token"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_store_resets_password_and_redirects_on_success"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_store_returns_validation_error_when_reset_fails"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Auth\PasswordUpdateTest::test_password_can_be_updated"/>
        <covered by="Tests\Feature\Auth\PasswordUpdateTest::test_correct_password_must_be_provided_to_update_password"/>
        <covered by="Tests\Feature\Auth\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\RegistrationTest::test_new_users_can_register"/>
        <covered by="Tests\Feature\ChatControllerTest::test_guests_are_redirected_from_chat_routes"/>
        <covered by="Tests\Feature\ChatControllerTest::test_index_shows_users_list_in_inertia"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_redirects_when_chat_with_self"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_marks_unseen_messages_as_seen_and_dispatches_read_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_store_creates_message_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_update_only_sender_can_update_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_update_forbidden_for_non_sender"/>
        <covered by="Tests\Feature\ChatControllerTest::test_destroy_soft_deletes_and_broadcasts_event"/>
        <covered by="Tests\Feature\ChatControllerTest::test_destroy_forbidden_for_non_sender"/>
        <covered by="Tests\Feature\ChatControllerTest::test_show_inertia_contains_grouped_messages_structure"/>
        <covered by="Tests\Feature\ProfileTest::test_profile_page_is_displayed"/>
        <covered by="Tests\Feature\ProfileTest::test_profile_information_can_be_updated"/>
        <covered by="Tests\Feature\ProfileTest::test_email_verification_status_is_unchanged_when_the_email_address_is_unchanged"/>
        <covered by="Tests\Feature\ProfileTest::test_user_can_delete_their_account"/>
        <covered by="Tests\Feature\ProfileTest::test_correct_password_must_be_provided_to_delete_account"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_returns_matches_by_name_and_username"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_returns_empty_when_no_matches"/>
        <covered by="Tests\Feature\UserControllerTest::test_search_works_with_no_query_parameter"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Exceptions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Exceptions\Handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ExceptionHandler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ExceptionHandler</token>
      </line>
      <line no="9">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">     * The list of the inputs that are never flashed to the session on validation exceptions.</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, string&gt;</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dontFlash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'current_password'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password_confirmation'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * Register the exception handling callbacks for the application.</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">reportable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
    </source>
  </file>
</phpunit>
