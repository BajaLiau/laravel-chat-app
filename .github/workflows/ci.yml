name: Laravel + React CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout repo
      - uses: actions/checkout@v3

      # Step 2: Setup PHP with required extensions
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath, pdo_mysql, sodium, openssl
          coverage: xdebug

      # Step 3: Setup Node.js for React
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 4: Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Step 5: Install NPM dependencies
      - name: Install NPM dependencies
        working-directory: ./resources/js
        run: npm install

      # Step 6: Setup environment dynamically (no .env.testing needed)
      - name: Setup environment
        run: |
          cp .env.example .env
          php artisan key:generate
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
          echo "HASH_DRIVER=bcrypt" >> .env

      # Step 7: Clear caches
      - name: Clear Laravel caches
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear

      # Step 8: Run migrations
      - name: Run Laravel migrations
        run: php artisan migrate --force

      # Step 9: Run Laravel tests (fixed)
      - name: Run Laravel tests
        run: ./vendor/bin/phpunit --configuration phpunit.xml --colors=always --debug

      # Step 10: Build React app
      - name: Build React
        working-directory: ./resources/js
        run: npm run build

      # Step 11: Run React tests
      - name: Test React
        working-directory: ./resources/js
        run: npm test -- --watchAll=false

      # Step 12: Optional Socket.IO server (if needed for integration tests)
      #- name: Start Socket.IO server
      #  working-directory: ./socket-server
      #  run: nohup node server.js &
