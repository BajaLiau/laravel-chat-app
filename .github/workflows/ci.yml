name: Laravel Chat App CI Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  laravel:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_chat_app
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: testing
      APP_DEBUG: true
      APP_URL: http://127.0.0.1
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_chat_app
      DB_USERNAME: root
      DB_PASSWORD: root
      MAIL_MAILER: log
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync
      SCOUT_DRIVER: database

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, pdo_mysql, exif, pcntl, gd

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Run build using Makefile
      run: make build

    # Upload build artifact to GitHub
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: laravel-build
        path: build/chat-app.zip

    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -uroot -proot > /dev/null 2>&1; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Run Laravel tests and generate JUnit report
      run: |
        mkdir -p storage/test-reports
        php artisan test --log-junit storage/test-reports/junit.xml

    # Publish test results inline in GitHub UI
    - name: Upload Laravel test results to GitHub
      uses: dorny/test-reporter@v1
      with:
        name: Laravel Tests
        path: storage/test-reports/junit.xml
        reporter: phpunit
        fail-on-error: true
