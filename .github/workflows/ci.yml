name: Laravel + React CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath, pdo_mysql, sodium, openssl
          coverage: xdebug

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Cache Composer
      - name: Cache Composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Cache NPM
      - name: Cache NPM
        uses: actions/cache@v3
        with:
          path: resources/js/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('resources/js/package-lock.json') }}

      - name: Install NPM dependencies
        working-directory: ./resources/js
        run: npm install

      # Environment setup
      - name: Setup environment
        run: |
          cp .env.example .env
          php artisan key:generate
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
          echo "HASH_DRIVER=bcrypt" >> .env

      # Clear Laravel caches
      - name: Clear Laravel caches
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear
          php artisan clear-compiled

      # Wait for MySQL
      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 -u root -proot --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      # Run migrations
      - name: Run Laravel migrations
        run: php artisan migrate --force

      # Laravel tests with report
      - name: Run Laravel tests
        run: vendor/bin/phpunit --log-junit storage/test-reports/phpunit.xml

      - name: Upload Laravel test report
        uses: actions/upload-artifact@v4
        with:
          name: laravel-test-report
          path: storage/test-reports/phpunit.xml

      # Build React
      - name: Build React
        working-directory: ./resources/js
        run: npm run build

      # Run React tests with report
      - name: Run React tests
        working-directory: ./resources/js
        run: |
          CI=true npx jest --ci --reporters=default --reporters=jest-junit

      - name: Upload React test report
        uses: actions/upload-artifact@v4
        with:
          name: react-test-report
          path: ./resources/js/junit.xml