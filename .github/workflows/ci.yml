name: Laravel + React CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  backend-frontend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_chat_app
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_chat_app
      DB_USERNAME: root
      DB_PASSWORD: root
      APP_URL: http://localhost
      MAIL_MAILER: log
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync
      SCOUT_DRIVER: database

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, pdo_mysql, exif, pcntl, gd

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Set up environment
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan config:clear
        php artisan route:clear

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -uroot -proot > /dev/null 2>&1; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Migrate and seed database
      run: php artisan migrate:fresh --seed --force
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_chat_app
        DB_USERNAME: root
        DB_PASSWORD: root

    - name: Run Laravel tests
      run: |
        mkdir -p storage/test-reports
        php artisan test -vvv --log-junit storage/test-reports/junit.xml

    - name: Upload Laravel test report
      uses: actions/upload-artifact@v4
      with:
        name: laravel-junit-report
        path: storage/test-reports/junit.xml

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install frontend dependencies
      run: npm install
      working-directory: resources/js

    - name: Run frontend component tests
      run: npm test -- --watchAll=false --ci
      working-directory: resources/js

    - name: Build React frontend
      run: npm run build
      working-directory: resources/js

    - name: Upload frontend build
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: resources/js/build